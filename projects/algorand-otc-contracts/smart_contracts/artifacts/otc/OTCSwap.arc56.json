{
    "name": "OTCSwap",
    "structs": {},
    "methods": [
        {
            "name": "create_application",
            "args": [
                {
                    "type": "asset",
                    "name": "asset_a"
                },
                {
                    "type": "uint64",
                    "name": "asset_a_amount"
                },
                {
                    "type": "asset",
                    "name": "asset_b"
                },
                {
                    "type": "uint64",
                    "name": "asset_b_amount"
                },
                {
                    "type": "uint64",
                    "name": "expiry_rounds"
                },
                {
                    "type": "account",
                    "name": "taker"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "accept_offer",
            "args": [
                {
                    "type": "axfer",
                    "name": "taker_transfer"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "reclaim_assets",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 6,
                "bytes": 2
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "maker": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "bWFrZXI="
                },
                "taker": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "dGFrZXI="
                },
                "asset_a": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRfYQ=="
                },
                "asset_a_amount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRfYV9hbW91bnQ="
                },
                "asset_b": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRfYg=="
                },
                "asset_b_amount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRfYl9hbW91bnQ="
                },
                "offer_expiry": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "b2ZmZXJfZXhwaXJ5"
                },
                "is_completed": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aXNfY29tcGxldGVk"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        318
                    ],
                    "errorMessage": "Maker cannot accept own offer"
                },
                {
                    "pc": [
                        326
                    ],
                    "errorMessage": "Must send to app"
                },
                {
                    "pc": [
                        287
                    ],
                    "errorMessage": "Offer expired"
                },
                {
                    "pc": [
                        411
                    ],
                    "errorMessage": "Offer not expired"
                },
                {
                    "pc": [
                        141
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        153,
                        165,
                        187
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        307
                    ],
                    "errorMessage": "Only assigned taker can accept"
                },
                {
                    "pc": [
                        461
                    ],
                    "errorMessage": "Only maker can delete"
                },
                {
                    "pc": [
                        422
                    ],
                    "errorMessage": "Only maker can reclaim"
                },
                {
                    "pc": [
                        278,
                        402
                    ],
                    "errorMessage": "Swap already completed"
                },
                {
                    "pc": [
                        453
                    ],
                    "errorMessage": "Swap must be completed or expired"
                },
                {
                    "pc": [
                        354
                    ],
                    "errorMessage": "Wrong amount sent"
                },
                {
                    "pc": [
                        340
                    ],
                    "errorMessage": "Wrong asset sent"
                },
                {
                    "pc": [
                        191
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        144,
                        156,
                        168
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        359,
                        427
                    ],
                    "errorMessage": "check self.asset_a exists"
                },
                {
                    "pc": [
                        365,
                        431
                    ],
                    "errorMessage": "check self.asset_a_amount exists"
                },
                {
                    "pc": [
                        335
                    ],
                    "errorMessage": "check self.asset_b exists"
                },
                {
                    "pc": [
                        349
                    ],
                    "errorMessage": "check self.asset_b_amount exists"
                },
                {
                    "pc": [
                        276,
                        400,
                        452
                    ],
                    "errorMessage": "check self.is_completed exists"
                },
                {
                    "pc": [
                        313,
                        417,
                        459
                    ],
                    "errorMessage": "check self.maker exists"
                },
                {
                    "pc": [
                        285,
                        409
                    ],
                    "errorMessage": "check self.offer_expiry exists"
                },
                {
                    "pc": [
                        292,
                        305
                    ],
                    "errorMessage": "check self.taker exists"
                },
                {
                    "pc": [
                        178
                    ],
                    "errorMessage": "transaction type is axfer"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAwIDEgNCAxMDAwCiAgICBieXRlY2Jsb2NrICJpc19jb21wbGV0ZWQiICJtYWtlciIgImFzc2V0X2EiICJhc3NldF9hX2Ftb3VudCIgIm9mZmVyX2V4cGlyeSIgInRha2VyIiAiYXNzZXRfYiIgImFzc2V0X2JfYW1vdW50IgogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo1CiAgICAvLyBjbGFzcyBPVENTd2FwKEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9hZnRlcl9pZl9lbHNlQDEwCiAgICBwdXNoYnl0ZXNzIDB4NmRlYTA3OTQgMHg3NzJlNWJjYyAweDRmMTdkMjM4IDB4MzNiMzQ5OWUgLy8gbWV0aG9kICJjcmVhdGVfYXBwbGljYXRpb24oYXNzZXQsdWludDY0LGFzc2V0LHVpbnQ2NCx1aW50NjQsYWNjb3VudCl2b2lkIiwgbWV0aG9kICJhY2NlcHRfb2ZmZXIoYXhmZXIpdm9pZCIsIG1ldGhvZCAicmVjbGFpbV9hc3NldHMoKXZvaWQiLCBtZXRob2QgImRlbGV0ZV9hcHBsaWNhdGlvbigpdm9pZCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fY3JlYXRlX2FwcGxpY2F0aW9uX3JvdXRlQDMgbWFpbl9hY2NlcHRfb2ZmZXJfcm91dGVANCBtYWluX3JlY2xhaW1fYXNzZXRzX3JvdXRlQDUgbWFpbl9kZWxldGVfYXBwbGljYXRpb25fcm91dGVANgoKbWFpbl9hZnRlcl9pZl9lbHNlQDEwOgogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo1CiAgICAvLyBjbGFzcyBPVENTd2FwKEFSQzRDb250cmFjdCk6CiAgICBpbnRjXzAgLy8gMAogICAgcmV0dXJuCgptYWluX2RlbGV0ZV9hcHBsaWNhdGlvbl9yb3V0ZUA2OgogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo4NS04NgogICAgLy8gIyBEZWxldGUgYXBwIChtYWtlciBvbmx5LCBhZnRlciBjb21wbGV0aW9uKQogICAgLy8gQGFiaW1ldGhvZChhbGxvd19hY3Rpb25zPVsiRGVsZXRlQXBwbGljYXRpb24iXSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIHB1c2hpbnQgNSAvLyBEZWxldGVBcHBsaWNhdGlvbgogICAgPT0KICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IERlbGV0ZUFwcGxpY2F0aW9uCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGNhbGxzdWIgZGVsZXRlX2FwcGxpY2F0aW9uCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgptYWluX3JlY2xhaW1fYXNzZXRzX3JvdXRlQDU6CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjY4LTY5CiAgICAvLyAjIFJlY2xhaW0gQXNzZXQgQSBpZiBvZmZlciBleHBpcmVzIChtYWtlciBvbmx5KQogICAgLy8gQGFiaW1ldGhvZCgpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIGNhbGxzdWIgcmVjbGFpbV9hc3NldHMKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCm1haW5fYWNjZXB0X29mZmVyX3JvdXRlQDQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjM2LTM3CiAgICAvLyAjIEFjY2VwdCBvZmZlciAodGFrZXIgZGVwb3NpdHMgQXNzZXQgQiwgc3dhcCBleGVjdXRlcykKICAgIC8vIEBhYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjUKICAgIC8vIGNsYXNzIE9UQ1N3YXAoQVJDNENvbnRyYWN0KToKICAgIHR4biBHcm91cEluZGV4CiAgICBpbnRjXzEgLy8gMQogICAgLQogICAgZHVwCiAgICBndHhucyBUeXBlRW51bQogICAgaW50Y18yIC8vIGF4ZmVyCiAgICA9PQogICAgYXNzZXJ0IC8vIHRyYW5zYWN0aW9uIHR5cGUgaXMgYXhmZXIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6MzYtMzcKICAgIC8vICMgQWNjZXB0IG9mZmVyICh0YWtlciBkZXBvc2l0cyBBc3NldCBCLCBzd2FwIGV4ZWN1dGVzKQogICAgLy8gQGFiaW1ldGhvZCgpCiAgICBjYWxsc3ViIGFjY2VwdF9vZmZlcgogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKbWFpbl9jcmVhdGVfYXBwbGljYXRpb25fcm91dGVAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6MTYtMTcKICAgIC8vICMgQ3JlYXRlIGFwcGxpY2F0aW9uCiAgICAvLyBAYWJpbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJOb09wIl0sIGNyZWF0ZT0icmVxdWlyZSIpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo1CiAgICAvLyBjbGFzcyBPVENTd2FwKEFSQzRDb250cmFjdCk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICB0eG5hcyBBc3NldHMKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGJ0b2kKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDMKICAgIGJ0b2kKICAgIHR4bmFzIEFzc2V0cwogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNAogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNQogICAgYnRvaQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNgogICAgYnRvaQogICAgdHhuYXMgQWNjb3VudHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6MTYtMTcKICAgIC8vICMgQ3JlYXRlIGFwcGxpY2F0aW9uCiAgICAvLyBAYWJpbWV0aG9kKGFsbG93X2FjdGlvbnM9WyJOb09wIl0sIGNyZWF0ZT0icmVxdWlyZSIpCiAgICBjYWxsc3ViIGNyZWF0ZV9hcHBsaWNhdGlvbgogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy5vdGMuY29udHJhY3QuT1RDU3dhcC5jcmVhdGVfYXBwbGljYXRpb24oYXNzZXRfYTogdWludDY0LCBhc3NldF9hX2Ftb3VudDogdWludDY0LCBhc3NldF9iOiB1aW50NjQsIGFzc2V0X2JfYW1vdW50OiB1aW50NjQsIGV4cGlyeV9yb3VuZHM6IHVpbnQ2NCwgdGFrZXI6IGJ5dGVzKSAtPiB2b2lkOgpjcmVhdGVfYXBwbGljYXRpb246CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjE2LTI2CiAgICAvLyAjIENyZWF0ZSBhcHBsaWNhdGlvbgogICAgLy8gQGFiaW1ldGhvZChhbGxvd19hY3Rpb25zPVsiTm9PcCJdLCBjcmVhdGU9InJlcXVpcmUiKQogICAgLy8gZGVmIGNyZWF0ZV9hcHBsaWNhdGlvbigKICAgIC8vICAgICBzZWxmLAogICAgLy8gICAgIGFzc2V0X2E6IEFzc2V0LAogICAgLy8gICAgIGFzc2V0X2FfYW1vdW50OiBVSW50NjQsCiAgICAvLyAgICAgYXNzZXRfYjogQXNzZXQsCiAgICAvLyAgICAgYXNzZXRfYl9hbW91bnQ6IFVJbnQ2NCwKICAgIC8vICAgICBleHBpcnlfcm91bmRzOiBVSW50NjQsCiAgICAvLyAgICAgdGFrZXI6IEFjY291bnQsCiAgICAvLyApIC0+IE5vbmU6CiAgICBwcm90byA2IDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6MjcKICAgIC8vIHNlbGYubWFrZXIgPSBUeG4uc2VuZGVyCiAgICBieXRlY18xIC8vICJtYWtlciIKICAgIHR4biBTZW5kZXIKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjI4CiAgICAvLyBzZWxmLmFzc2V0X2EgPSBhc3NldF9hCiAgICBieXRlY18yIC8vICJhc3NldF9hIgogICAgZnJhbWVfZGlnIC02CiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weToyOQogICAgLy8gc2VsZi5hc3NldF9hX2Ftb3VudCA9IGFzc2V0X2FfYW1vdW50CiAgICBieXRlY18zIC8vICJhc3NldF9hX2Ftb3VudCIKICAgIGZyYW1lX2RpZyAtNQogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6MzAKICAgIC8vIHNlbGYuYXNzZXRfYiA9IGFzc2V0X2IKICAgIGJ5dGVjIDYgLy8gImFzc2V0X2IiCiAgICBmcmFtZV9kaWcgLTQKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjMxCiAgICAvLyBzZWxmLmFzc2V0X2JfYW1vdW50ID0gYXNzZXRfYl9hbW91bnQKICAgIGJ5dGVjIDcgLy8gImFzc2V0X2JfYW1vdW50IgogICAgZnJhbWVfZGlnIC0zCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTozMgogICAgLy8gc2VsZi5vZmZlcl9leHBpcnkgPSBHbG9iYWwucm91bmQgKyBleHBpcnlfcm91bmRzCiAgICBnbG9iYWwgUm91bmQKICAgIGZyYW1lX2RpZyAtMgogICAgKwogICAgYnl0ZWMgNCAvLyAib2ZmZXJfZXhwaXJ5IgogICAgc3dhcAogICAgYXBwX2dsb2JhbF9wdXQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6MzMKICAgIC8vIHNlbGYudGFrZXIgPSB0YWtlcgogICAgYnl0ZWMgNSAvLyAidGFrZXIiCiAgICBmcmFtZV9kaWcgLTEKICAgIGFwcF9nbG9iYWxfcHV0CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjM0CiAgICAvLyBzZWxmLmlzX2NvbXBsZXRlZCA9IEZhbHNlCiAgICBieXRlY18wIC8vICJpc19jb21wbGV0ZWQiCiAgICBpbnRjXzAgLy8gMAogICAgYXBwX2dsb2JhbF9wdXQKICAgIHJldHN1YgoKCi8vIHNtYXJ0X2NvbnRyYWN0cy5vdGMuY29udHJhY3QuT1RDU3dhcC5hY2NlcHRfb2ZmZXIodGFrZXJfdHJhbnNmZXI6IHVpbnQ2NCkgLT4gdm9pZDoKYWNjZXB0X29mZmVyOgogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTozNi0zOAogICAgLy8gIyBBY2NlcHQgb2ZmZXIgKHRha2VyIGRlcG9zaXRzIEFzc2V0IEIsIHN3YXAgZXhlY3V0ZXMpCiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIC8vIGRlZiBhY2NlcHRfb2ZmZXIoc2VsZiwgdGFrZXJfdHJhbnNmZXI6IGd0eG4uQXNzZXRUcmFuc2ZlclRyYW5zYWN0aW9uKSAtPiBOb25lOgogICAgcHJvdG8gMSAwCiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjM5CiAgICAvLyBhc3NlcnQgbm90IHNlbGYuaXNfY29tcGxldGVkLCAiU3dhcCBhbHJlYWR5IGNvbXBsZXRlZCIKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJpc19jb21wbGV0ZWQiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuaXNfY29tcGxldGVkIGV4aXN0cwogICAgIQogICAgYXNzZXJ0IC8vIFN3YXAgYWxyZWFkeSBjb21wbGV0ZWQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NDAKICAgIC8vIGFzc2VydCBHbG9iYWwucm91bmQgPCBzZWxmLm9mZmVyX2V4cGlyeSwgIk9mZmVyIGV4cGlyZWQiCiAgICBnbG9iYWwgUm91bmQKICAgIGludGNfMCAvLyAwCiAgICBieXRlYyA0IC8vICJvZmZlcl9leHBpcnkiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYub2ZmZXJfZXhwaXJ5IGV4aXN0cwogICAgPAogICAgYXNzZXJ0IC8vIE9mZmVyIGV4cGlyZWQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NDEKICAgIC8vIGlmIHNlbGYudGFrZXIgIT0gR2xvYmFsLnplcm9fYWRkcmVzczoKICAgIGludGNfMCAvLyAwCiAgICBieXRlYyA1IC8vICJ0YWtlciIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi50YWtlciBleGlzdHMKICAgIGdsb2JhbCBaZXJvQWRkcmVzcwogICAgIT0KICAgIGJ6IGFjY2VwdF9vZmZlcl9hZnRlcl9pZl9lbHNlQDIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NDIKICAgIC8vIGFzc2VydCBUeG4uc2VuZGVyID09IHNlbGYudGFrZXIsICJPbmx5IGFzc2lnbmVkIHRha2VyIGNhbiBhY2NlcHQiCiAgICB0eG4gU2VuZGVyCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWMgNSAvLyAidGFrZXIiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYudGFrZXIgZXhpc3RzCiAgICA9PQogICAgYXNzZXJ0IC8vIE9ubHkgYXNzaWduZWQgdGFrZXIgY2FuIGFjY2VwdAoKYWNjZXB0X29mZmVyX2FmdGVyX2lmX2Vsc2VAMjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NDMKICAgIC8vIGFzc2VydCBUeG4uc2VuZGVyICE9IHNlbGYubWFrZXIsICJNYWtlciBjYW5ub3QgYWNjZXB0IG93biBvZmZlciIKICAgIHR4biBTZW5kZXIKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18xIC8vICJtYWtlciIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5tYWtlciBleGlzdHMKICAgIHN3YXAKICAgIGRpZyAxCiAgICAhPQogICAgYXNzZXJ0IC8vIE1ha2VyIGNhbm5vdCBhY2NlcHQgb3duIG9mZmVyCiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjQ1LTQ2CiAgICAvLyAjIENoZWNrIHRha2VyIHRyYW5zZmVyCiAgICAvLyBhc3NlcnQgdGFrZXJfdHJhbnNmZXIuYXNzZXRfcmVjZWl2ZXIgPT0gR2xvYmFsLmN1cnJlbnRfYXBwbGljYXRpb25fYWRkcmVzcywgIk11c3Qgc2VuZCB0byBhcHAiCiAgICBmcmFtZV9kaWcgLTEKICAgIGd0eG5zIEFzc2V0UmVjZWl2ZXIKICAgIGdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCiAgICA9PQogICAgYXNzZXJ0IC8vIE11c3Qgc2VuZCB0byBhcHAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NDcKICAgIC8vIGFzc2VydCB0YWtlcl90cmFuc2Zlci54ZmVyX2Fzc2V0ID09IHNlbGYuYXNzZXRfYiwgIldyb25nIGFzc2V0IHNlbnQiCiAgICBmcmFtZV9kaWcgLTEKICAgIGd0eG5zIFhmZXJBc3NldAogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjIDYgLy8gImFzc2V0X2IiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuYXNzZXRfYiBleGlzdHMKICAgIHN3YXAKICAgIGRpZyAxCiAgICA9PQogICAgYXNzZXJ0IC8vIFdyb25nIGFzc2V0IHNlbnQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NDgKICAgIC8vIGFzc2VydCB0YWtlcl90cmFuc2Zlci5hc3NldF9hbW91bnQgPT0gc2VsZi5hc3NldF9iX2Ftb3VudCwgIldyb25nIGFtb3VudCBzZW50IgogICAgZnJhbWVfZGlnIC0xCiAgICBndHhucyBBc3NldEFtb3VudAogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjIDcgLy8gImFzc2V0X2JfYW1vdW50IgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBzZWxmLmFzc2V0X2JfYW1vdW50IGV4aXN0cwogICAgc3dhcAogICAgZGlnIDEKICAgID09CiAgICBhc3NlcnQgLy8gV3JvbmcgYW1vdW50IHNlbnQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NTAtNTYKICAgIC8vICMgU2VuZCBBc3NldCBBIHRvIHRha2VyCiAgICAvLyBpdHhuLkFzc2V0VHJhbnNmZXIoCiAgICAvLyAgICAgeGZlcl9hc3NldD1zZWxmLmFzc2V0X2EsCiAgICAvLyAgICAgYXNzZXRfcmVjZWl2ZXI9VHhuLnNlbmRlciwKICAgIC8vICAgICBhc3NldF9hbW91bnQ9c2VsZi5hc3NldF9hX2Ftb3VudCwKICAgIC8vICAgICBmZWU9MV8wMDAsCiAgICAvLyApLnN1Ym1pdCgpCiAgICBpdHhuX2JlZ2luCiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjUyCiAgICAvLyB4ZmVyX2Fzc2V0PXNlbGYuYXNzZXRfYSwKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18yIC8vICJhc3NldF9hIgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBzZWxmLmFzc2V0X2EgZXhpc3RzCiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjUzCiAgICAvLyBhc3NldF9yZWNlaXZlcj1UeG4uc2VuZGVyLAogICAgdHhuIFNlbmRlcgogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo1NAogICAgLy8gYXNzZXRfYW1vdW50PXNlbGYuYXNzZXRfYV9hbW91bnQsCiAgICBpbnRjXzAgLy8gMAogICAgYnl0ZWNfMyAvLyAiYXNzZXRfYV9hbW91bnQiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuYXNzZXRfYV9hbW91bnQgZXhpc3RzCiAgICBpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CiAgICBpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKICAgIGl0eG5fZmllbGQgWGZlckFzc2V0CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjUwLTUxCiAgICAvLyAjIFNlbmQgQXNzZXQgQSB0byB0YWtlcgogICAgLy8gaXR4bi5Bc3NldFRyYW5zZmVyKAogICAgaW50Y18yIC8vIGF4ZmVyCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjU1CiAgICAvLyBmZWU9MV8wMDAsCiAgICBpbnRjXzMgLy8gMTAwMAogICAgaXR4bl9maWVsZCBGZWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NTAtNTYKICAgIC8vICMgU2VuZCBBc3NldCBBIHRvIHRha2VyCiAgICAvLyBpdHhuLkFzc2V0VHJhbnNmZXIoCiAgICAvLyAgICAgeGZlcl9hc3NldD1zZWxmLmFzc2V0X2EsCiAgICAvLyAgICAgYXNzZXRfcmVjZWl2ZXI9VHhuLnNlbmRlciwKICAgIC8vICAgICBhc3NldF9hbW91bnQ9c2VsZi5hc3NldF9hX2Ftb3VudCwKICAgIC8vICAgICBmZWU9MV8wMDAsCiAgICAvLyApLnN1Ym1pdCgpCiAgICBpdHhuX3N1Ym1pdAogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo1OC02NAogICAgLy8gIyBTZW5kIEFzc2V0IEIgdG8gbWFrZXIKICAgIC8vIGl0eG4uQXNzZXRUcmFuc2ZlcigKICAgIC8vICAgICB4ZmVyX2Fzc2V0PXNlbGYuYXNzZXRfYiwKICAgIC8vICAgICBhc3NldF9yZWNlaXZlcj1zZWxmLm1ha2VyLAogICAgLy8gICAgIGFzc2V0X2Ftb3VudD1zZWxmLmFzc2V0X2JfYW1vdW50LAogICAgLy8gICAgIGZlZT0xXzAwMCwKICAgIC8vICkuc3VibWl0KCkKICAgIGl0eG5fYmVnaW4KICAgIGl0eG5fZmllbGQgQXNzZXRBbW91bnQKICAgIGl0eG5fZmllbGQgWGZlckFzc2V0CiAgICBpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NTgtNTkKICAgIC8vICMgU2VuZCBBc3NldCBCIHRvIG1ha2VyCiAgICAvLyBpdHhuLkFzc2V0VHJhbnNmZXIoCiAgICBpbnRjXzIgLy8gYXhmZXIKICAgIGl0eG5fZmllbGQgVHlwZUVudW0KICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NjMKICAgIC8vIGZlZT0xXzAwMCwKICAgIGludGNfMyAvLyAxMDAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo1OC02NAogICAgLy8gIyBTZW5kIEFzc2V0IEIgdG8gbWFrZXIKICAgIC8vIGl0eG4uQXNzZXRUcmFuc2ZlcigKICAgIC8vICAgICB4ZmVyX2Fzc2V0PXNlbGYuYXNzZXRfYiwKICAgIC8vICAgICBhc3NldF9yZWNlaXZlcj1zZWxmLm1ha2VyLAogICAgLy8gICAgIGFzc2V0X2Ftb3VudD1zZWxmLmFzc2V0X2JfYW1vdW50LAogICAgLy8gICAgIGZlZT0xXzAwMCwKICAgIC8vICkuc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjY2CiAgICAvLyBzZWxmLmlzX2NvbXBsZXRlZCA9IFRydWUKICAgIGJ5dGVjXzAgLy8gImlzX2NvbXBsZXRlZCIKICAgIGludGNfMSAvLyAxCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLm90Yy5jb250cmFjdC5PVENTd2FwLnJlY2xhaW1fYXNzZXRzKCkgLT4gdm9pZDoKcmVjbGFpbV9hc3NldHM6CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjcxCiAgICAvLyBhc3NlcnQgbm90IHNlbGYuaXNfY29tcGxldGVkLCAiU3dhcCBhbHJlYWR5IGNvbXBsZXRlZCIKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJpc19jb21wbGV0ZWQiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuaXNfY29tcGxldGVkIGV4aXN0cwogICAgIQogICAgYXNzZXJ0IC8vIFN3YXAgYWxyZWFkeSBjb21wbGV0ZWQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NzIKICAgIC8vIGFzc2VydCBHbG9iYWwucm91bmQgPj0gc2VsZi5vZmZlcl9leHBpcnksICJPZmZlciBub3QgZXhwaXJlZCIKICAgIGdsb2JhbCBSb3VuZAogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjIDQgLy8gIm9mZmVyX2V4cGlyeSIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5vZmZlcl9leHBpcnkgZXhpc3RzCiAgICA+PQogICAgYXNzZXJ0IC8vIE9mZmVyIG5vdCBleHBpcmVkCiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjczCiAgICAvLyBhc3NlcnQgVHhuLnNlbmRlciA9PSBzZWxmLm1ha2VyLCAiT25seSBtYWtlciBjYW4gcmVjbGFpbSIKICAgIHR4biBTZW5kZXIKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18xIC8vICJtYWtlciIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5tYWtlciBleGlzdHMKICAgIHN3YXAKICAgIGRpZyAxCiAgICA9PQogICAgYXNzZXJ0IC8vIE9ubHkgbWFrZXIgY2FuIHJlY2xhaW0KICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NzUtODEKICAgIC8vICMgUmVmdW5kIEFzc2V0IEEgdG8gbWFrZXIKICAgIC8vIGl0eG4uQXNzZXRUcmFuc2ZlcigKICAgIC8vICAgICB4ZmVyX2Fzc2V0PXNlbGYuYXNzZXRfYSwKICAgIC8vICAgICBhc3NldF9yZWNlaXZlcj1zZWxmLm1ha2VyLAogICAgLy8gICAgIGFzc2V0X2Ftb3VudD1zZWxmLmFzc2V0X2FfYW1vdW50LAogICAgLy8gICAgIGZlZT0xXzAwMCwKICAgIC8vICkuc3VibWl0KCkKICAgIGl0eG5fYmVnaW4KICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NzcKICAgIC8vIHhmZXJfYXNzZXQ9c2VsZi5hc3NldF9hLAogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzIgLy8gImFzc2V0X2EiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuYXNzZXRfYSBleGlzdHMKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NzkKICAgIC8vIGFzc2V0X2Ftb3VudD1zZWxmLmFzc2V0X2FfYW1vdW50LAogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzMgLy8gImFzc2V0X2FfYW1vdW50IgogICAgYXBwX2dsb2JhbF9nZXRfZXgKICAgIGFzc2VydCAvLyBjaGVjayBzZWxmLmFzc2V0X2FfYW1vdW50IGV4aXN0cwogICAgaXR4bl9maWVsZCBBc3NldEFtb3VudAogICAgaXR4bl9maWVsZCBYZmVyQXNzZXQKICAgIGl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo3NS03NgogICAgLy8gIyBSZWZ1bmQgQXNzZXQgQSB0byBtYWtlcgogICAgLy8gaXR4bi5Bc3NldFRyYW5zZmVyKAogICAgaW50Y18yIC8vIGF4ZmVyCiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjgwCiAgICAvLyBmZWU9MV8wMDAsCiAgICBpbnRjXzMgLy8gMTAwMAogICAgaXR4bl9maWVsZCBGZWUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6NzUtODEKICAgIC8vICMgUmVmdW5kIEFzc2V0IEEgdG8gbWFrZXIKICAgIC8vIGl0eG4uQXNzZXRUcmFuc2ZlcigKICAgIC8vICAgICB4ZmVyX2Fzc2V0PXNlbGYuYXNzZXRfYSwKICAgIC8vICAgICBhc3NldF9yZWNlaXZlcj1zZWxmLm1ha2VyLAogICAgLy8gICAgIGFzc2V0X2Ftb3VudD1zZWxmLmFzc2V0X2FfYW1vdW50LAogICAgLy8gICAgIGZlZT0xXzAwMCwKICAgIC8vICkuc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICAvLyBzbWFydF9jb250cmFjdHMvb3RjL2NvbnRyYWN0LnB5OjgzCiAgICAvLyBzZWxmLmlzX2NvbXBsZXRlZCA9IFRydWUKICAgIGJ5dGVjXzAgLy8gImlzX2NvbXBsZXRlZCIKICAgIGludGNfMSAvLyAxCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgcmV0c3ViCgoKLy8gc21hcnRfY29udHJhY3RzLm90Yy5jb250cmFjdC5PVENTd2FwLmRlbGV0ZV9hcHBsaWNhdGlvbigpIC0+IHZvaWQ6CmRlbGV0ZV9hcHBsaWNhdGlvbjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9vdGMvY29udHJhY3QucHk6ODgKICAgIC8vIGFzc2VydCBzZWxmLmlzX2NvbXBsZXRlZCwgIlN3YXAgbXVzdCBiZSBjb21wbGV0ZWQgb3IgZXhwaXJlZCIKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18wIC8vICJpc19jb21wbGV0ZWQiCiAgICBhcHBfZ2xvYmFsX2dldF9leAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuaXNfY29tcGxldGVkIGV4aXN0cwogICAgYXNzZXJ0IC8vIFN3YXAgbXVzdCBiZSBjb21wbGV0ZWQgb3IgZXhwaXJlZAogICAgLy8gc21hcnRfY29udHJhY3RzL290Yy9jb250cmFjdC5weTo4OQogICAgLy8gYXNzZXJ0IFR4bi5zZW5kZXIgPT0gc2VsZi5tYWtlciwgIk9ubHkgbWFrZXIgY2FuIGRlbGV0ZSIKICAgIHR4biBTZW5kZXIKICAgIGludGNfMCAvLyAwCiAgICBieXRlY18xIC8vICJtYWtlciIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5tYWtlciBleGlzdHMKICAgID09CiAgICBhc3NlcnQgLy8gT25seSBtYWtlciBjYW4gZGVsZXRlCiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAAEE6AcmCAxpc19jb21wbGV0ZWQFbWFrZXIHYXNzZXRfYQ5hc3NldF9hX2Ftb3VudAxvZmZlcl9leHBpcnkFdGFrZXIHYXNzZXRfYg5hc3NldF9iX2Ftb3VudDEbQQAjggQEbeoHlAR3LlvMBE8X0jgEM7NJnjYaAI4EADIAHAAQAAIiQzEZgQUSRDEYRIgBLSNDMRkURDEYRIgA7SNDMRkURDEYRDEWIwlJOBAkEkSIAFgjQzEZFEQxGBRENhoBF8AwNhoCFzYaAxfAMDYaBBc2GgUXNhoGF8AciAACI0OKBgApMQBnKov6ZyuL+2cnBov8ZycHi/1nMgaL/ggnBExnJwWL/2coImeJigEAIihlRBREMgYiJwRlRAxEIicFZUQyAxNBAAkxACInBWVEEkQxACIpZURMSwETRIv/OBQyChJEi/84ESInBmVETEsBEkSL/zgSIicHZURMSwESRLEiKmVEMQAiK2VEshKyFLIRJLIQJbIBs7GyErIRshQkshAlsgGzKCNniSIoZUQURDIGIicEZUQPRDEAIillRExLARJEsSIqZUQiK2VEshKyEbIUJLIQJbIBsygjZ4kiKGVERDEAIillRBJEiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 10,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}